services:
  server:
    build:
      context: .
    environment:
      NODE_ENV: ${NODE_ENV}
      DB_URL: postgresql://${DB_USER-postgres}:${DB_PASSWORD}@${DB_HOST-db}:${DB_PORT-5432}/${DB_DATABASE}?schema=public&connection_limit=${DB_CONNECTION_LIMIT-20}
      JWT_SECRET: ${JWT_SECRET}
    volumes:
      - ./src:/usr/src/app/src
      - ./entrypoint.sh:/usr/src/app/entrypoint.sh
    entrypoint: ["sh", "/usr/src/app/entrypoint.sh"]
    ports:
      - 3000:3000
    depends_on:
      db:
        condition: service_healthy
  db:
    build:
      context: .
      dockerfile: ./db.Dockerfile
    restart: always
    user: postgres
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      - PGUSER=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_DATABASE}
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  db-data:
